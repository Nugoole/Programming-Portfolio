<ResourceDictionary
    x:Class="ALT.DS.UC.View.DSToggleButtonStyle"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:ALT.DS.UC"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <local:RadiusConverter x:Key="radiusConverter" />
    <local:CircleScaleConverter x:Key="circleScaler" />


    <Style x:Key="CheckBoxStyle2" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Lavender" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecking">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="Thumb"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="22" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecking">
                            <DoubleAnimationUsingKeyFrames
                                BeginTime="00:00:00"
                                Storyboard.TargetName="Thumb"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid MinWidth="{TemplateBinding MinWidth}">
                        <Border
                            x:Name="RangeBorder"
                            Height="6.4"
                            Margin="1,0,1,0"
                            Background="Transparent"
                            BorderBrush="Gray"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3" />

                        <Ellipse
                            x:Name="Thumb"
                            Width="16"
                            Height="16"
                            HorizontalAlignment="Left"
                            Fill="{TemplateBinding Background}"
                            StrokeThickness="1">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform X="0" Y="0" />
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Grid>


                    <ControlTemplate.Triggers>
                        <!--  You can modify your own style changes here  -->

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Thumb" Property="Fill" Value="Brown" />
                            <Setter TargetName="RangeBorder" Property="BorderBrush" Value="DarkGray" />
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="OnUnchecking_BeginStoryboard" Storyboard="{StaticResource OnUnchecking}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="OnChecking_BeginStoryboard" Storyboard="{StaticResource OnChecking}" />
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Thumb" Property="Stroke" Value="LightGray" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="14,0,0,0"
                        SnapsToDevicePixels="true"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="toggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>

            <Storyboard x:Key="OnUnChecking">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid
            MinWidth="30"
            MinHeight="10"
            VerticalAlignment="Center">
            <Border
                x:Name="dockPanel"
                Background="{TemplateBinding Background}"
                CornerRadius="25"
                IsEnabled="True"
                IsHitTestVisible="True">
                <ContentPresenter
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Content="{TemplateBinding Content}" />
            </Border>
            <Ellipse
                x:Name="ellipse"
                Width="{Binding Path=Height, RelativeSource={RelativeSource Self}}"
                Height="{Binding Path=ActualHeight, BindsDirectlyToSource=True, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource circleScaler}}"
                Margin="7.995,7.84,0,7.84"
                HorizontalAlignment="Left"
                VerticalAlignment="Stretch"
                Fill="White"
                IsEnabled="True"
                RenderTransformOrigin="0.5,0.5"
                d:LayoutOverrides="VerticalAlignment, TopMargin, BottomMargin">
                <Ellipse.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </Ellipse.RenderTransform>
            </Ellipse>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="true">
                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                <Setter Property="Padding" Value="4,-1,0,0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true" />
            <Trigger Property="IsEnabled" Value="false" />
            <Trigger Property="IsPressed" Value="true" />
            <Trigger Property="IsChecked" Value="true">

                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="OnChecking_BeginStoryboard">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource radiusConverter}}" />

                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="OnChecking_BeginStoryboard" />
                </Trigger.ExitActions>

            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="dockPanel" Property="Background" Value="Red" />

                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="OnUnChecking_BeginStoryboard" />

                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <StopStoryboard BeginStoryboardName="OnUnChecking_BeginStoryboard" />
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>







</ResourceDictionary>